{"version":3,"file":"index.iife.min.js","sources":["../node_modules/convert-hex/convert-hex.js","../node_modules/convert-string/convert-string.js","../node_modules/sha256/lib/sha256.js","../src/index.js"],"sourcesContent":["!function(globals) {\n'use strict'\n\nvar convertHex = {\n  bytesToHex: function(bytes) {\n    /*if (typeof bytes.byteLength != 'undefined') {\n      var newBytes = []\n\n      if (typeof bytes.buffer != 'undefined')\n        bytes = new DataView(bytes.buffer)\n      else\n        bytes = new DataView(bytes)\n\n      for (var i = 0; i < bytes.byteLength; ++i) {\n        newBytes.push(bytes.getUint8(i))\n      }\n      bytes = newBytes\n    }*/\n    return arrBytesToHex(bytes)\n  },\n  hexToBytes: function(hex) {\n    if (hex.length % 2 === 1) throw new Error(\"hexToBytes can't have a string with an odd number of characters.\")\n    if (hex.indexOf('0x') === 0) hex = hex.slice(2)\n    return hex.match(/../g).map(function(x) { return parseInt(x,16) })\n  }\n}\n\n\n// PRIVATE\n\nfunction arrBytesToHex(bytes) {\n  return bytes.map(function(x) { return padLeft(x.toString(16),2) }).join('')\n}\n\nfunction padLeft(orig, len) {\n  if (orig.length > len) return orig\n  return Array(len - orig.length + 1).join('0') + orig\n}\n\n\nif (typeof module !== 'undefined' && module.exports) { //CommonJS\n  module.exports = convertHex\n} else {\n  globals.convertHex = convertHex\n}\n\n}(this);","!function(globals) {\n'use strict'\n\nvar convertString = {\n  bytesToString: function(bytes) {\n    return bytes.map(function(x){ return String.fromCharCode(x) }).join('')\n  },\n  stringToBytes: function(str) {\n    return str.split('').map(function(x) { return x.charCodeAt(0) })\n  }\n}\n\n//http://hossa.in/2012/07/20/utf-8-in-javascript.html\nconvertString.UTF8 = {\n   bytesToString: function(bytes) {\n    return decodeURIComponent(escape(convertString.bytesToString(bytes)))\n  },\n  stringToBytes: function(str) {\n   return convertString.stringToBytes(unescape(encodeURIComponent(str)))\n  }\n}\n\nif (typeof module !== 'undefined' && module.exports) { //CommonJS\n  module.exports = convertString\n} else {\n  globals.convertString = convertString\n}\n\n}(this);","!function(globals) {\n'use strict'\n\nvar _imports = {}\n\nif (typeof module !== 'undefined' && module.exports) { //CommonJS\n  _imports.bytesToHex = require('convert-hex').bytesToHex\n  _imports.convertString = require('convert-string')\n  module.exports = sha256\n} else {\n  _imports.bytesToHex = globals.convertHex.bytesToHex\n  _imports.convertString = globals.convertString\n  globals.sha256 = sha256\n}\n\n/*\nCryptoJS v3.1.2\ncode.google.com/p/crypto-js\n(c) 2009-2013 by Jeff Mott. All rights reserved.\ncode.google.com/p/crypto-js/wiki/License\n*/\n\n// Initialization round constants tables\nvar K = []\n\n// Compute constants\n!function () {\n  function isPrime(n) {\n    var sqrtN = Math.sqrt(n);\n    for (var factor = 2; factor <= sqrtN; factor++) {\n      if (!(n % factor)) return false\n    }\n\n    return true\n  }\n\n  function getFractionalBits(n) {\n    return ((n - (n | 0)) * 0x100000000) | 0\n  }\n\n  var n = 2\n  var nPrime = 0\n  while (nPrime < 64) {\n    if (isPrime(n)) {\n      K[nPrime] = getFractionalBits(Math.pow(n, 1 / 3))\n      nPrime++\n    }\n\n    n++\n  }\n}()\n\nvar bytesToWords = function (bytes) {\n  var words = []\n  for (var i = 0, b = 0; i < bytes.length; i++, b += 8) {\n    words[b >>> 5] |= bytes[i] << (24 - b % 32)\n  }\n  return words\n}\n\nvar wordsToBytes = function (words) {\n  var bytes = []\n  for (var b = 0; b < words.length * 32; b += 8) {\n    bytes.push((words[b >>> 5] >>> (24 - b % 32)) & 0xFF)\n  }\n  return bytes\n}\n\n// Reusable object\nvar W = []\n\nvar processBlock = function (H, M, offset) {\n  // Working variables\n  var a = H[0], b = H[1], c = H[2], d = H[3]\n  var e = H[4], f = H[5], g = H[6], h = H[7]\n\n    // Computation\n  for (var i = 0; i < 64; i++) {\n    if (i < 16) {\n      W[i] = M[offset + i] | 0\n    } else {\n      var gamma0x = W[i - 15]\n      var gamma0  = ((gamma0x << 25) | (gamma0x >>> 7))  ^\n                    ((gamma0x << 14) | (gamma0x >>> 18)) ^\n                    (gamma0x >>> 3)\n\n      var gamma1x = W[i - 2];\n      var gamma1  = ((gamma1x << 15) | (gamma1x >>> 17)) ^\n                    ((gamma1x << 13) | (gamma1x >>> 19)) ^\n                    (gamma1x >>> 10)\n\n      W[i] = gamma0 + W[i - 7] + gamma1 + W[i - 16];\n    }\n\n    var ch  = (e & f) ^ (~e & g);\n    var maj = (a & b) ^ (a & c) ^ (b & c);\n\n    var sigma0 = ((a << 30) | (a >>> 2)) ^ ((a << 19) | (a >>> 13)) ^ ((a << 10) | (a >>> 22));\n    var sigma1 = ((e << 26) | (e >>> 6)) ^ ((e << 21) | (e >>> 11)) ^ ((e << 7)  | (e >>> 25));\n\n    var t1 = h + sigma1 + ch + K[i] + W[i];\n    var t2 = sigma0 + maj;\n\n    h = g;\n    g = f;\n    f = e;\n    e = (d + t1) | 0;\n    d = c;\n    c = b;\n    b = a;\n    a = (t1 + t2) | 0;\n  }\n\n  // Intermediate hash value\n  H[0] = (H[0] + a) | 0;\n  H[1] = (H[1] + b) | 0;\n  H[2] = (H[2] + c) | 0;\n  H[3] = (H[3] + d) | 0;\n  H[4] = (H[4] + e) | 0;\n  H[5] = (H[5] + f) | 0;\n  H[6] = (H[6] + g) | 0;\n  H[7] = (H[7] + h) | 0;\n}\n\nfunction sha256(message, options) {;\n  if (message.constructor === String) {\n    message = _imports.convertString.UTF8.stringToBytes(message);\n  }\n\n  var H =[ 0x6A09E667, 0xBB67AE85, 0x3C6EF372, 0xA54FF53A,\n           0x510E527F, 0x9B05688C, 0x1F83D9AB, 0x5BE0CD19 ];\n\n  var m = bytesToWords(message);\n  var l = message.length * 8;\n\n  m[l >> 5] |= 0x80 << (24 - l % 32);\n  m[((l + 64 >> 9) << 4) + 15] = l;\n\n  for (var i=0 ; i<m.length; i += 16) {\n    processBlock(H, m, i);\n  }\n\n  var digestbytes = wordsToBytes(H);\n  return options && options.asBytes ? digestbytes :\n         options && options.asString ? _imports.convertString.bytesToString(digestbytes) :\n         _imports.bytesToHex(digestbytes)\n}\n\nsha256.x2 = function(message, options) {\n  return sha256(sha256(message, { asBytes:true }), options)\n}\n\n}(this);\n","import sha256 from 'sha256';\r\n\r\nfunction base64_encode(str) {\r\n    return Buffer.from(str).toString('base64');\r\n}\r\n\r\nfunction base64_decode(str) {\r\n    return Buffer.from(str, 'base64');\r\n}\r\n\r\nfunction create_token(payload, secret) {\r\n    let part1 = base64_encode(JSON.stringify(payload));\r\n    let signature = sha256(`${part1}.${secret}`);\r\n\r\n    return part1 + '.' + signature;\r\n\r\n}\r\n\r\nfunction verify_token(token, secret) {\r\n    return new Promise((resolve, reject) => {\r\n        let arr = token.split('.');    \r\n\r\n        if (arr.length == 2) {\r\n            let signature = sha256(`${arr[0]}.${secret}`);\r\n    \r\n            if (signature == arr[1]) {\r\n                resolve(JSON.parse(base64_decode(arr[0])));\r\n            } else {\r\n                reject({status:501, description: 'invalid signature'});\r\n            }\r\n        }\r\n    \r\n        reject({status:502, description: 'invalid token'});\r\n    })\r\n}\r\n\r\nexport { sha256, base64_decode, base64_encode, create_token, verify_token }"],"names":["globals","convertHex","bytes","arrBytesToHex","hex","x","padLeft","orig","len","module","this","convertString","str","_imports","require$$0","require$$1","sha256","K","isPrime","n","sqrtN","factor","getFractionalBits","nPrime","bytesToWords","words","i","b","wordsToBytes","W","processBlock","H","M","offset","a","c","d","e","f","g","h","gamma0x","gamma0","gamma1x","gamma1","ch","maj","sigma0","sigma1","t1","t2","message","options","m","l","digestbytes","base64_encode","base64_decode","create_token","payload","secret","part1","signature","verify_token","token","resolve","reject","arr"],"mappings":"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","x_google_ignoreList":[0,1,2]}